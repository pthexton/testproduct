name: C/C++ CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  prbot:
    name: Automation Options
    runs-on: self-hosted

    steps:
      # - name: Get PR Info
      #   id: pr_info
      #   run: |
      #     echo "::set-output name=number::$(jq '.pull_request.number' ${GITHUB_EVENT_PATH})"
      #     echo "::set-output name=body::$(jq '.pull_request.body' ${GITHUB_EVENT_PATH})"
      - name: event
        run: cat "${GITHUB_EVENT_PATH}"
      - name: Determine automation branch
        id: automation
        run: |
          # Will be overridden if we find a previously changed value in the PR description body
          branch="main"

          current_body=$(jq '.pull_request.body' ${GITHUB_EVENT_PATH})
          while IFS= read -r line; do
              if [[ "${line}" == "##### Automation branch:"* ]]; then
                branch=$(basename "${line//" "/\/}")
              fi
          done <<< "${current_body}"

          echo "::set-output name=branch::${branch}"
      - uses: actions/checkout@v2
        with:
          repository: "pthexton/testproduct-automation"
          ref: "${{ steps.automation.outputs.branch }}"
      - name: Create PR Description
        if: ${{ github.event_name == 'pull_request' && github.event.action == 'opened' }}
        run: |
          readonly automation_hosts=("macOS Mojave", "macOS Catalina", "macOS Big Sur", "macOS Beta")
          # Helper for markdown checkboxes
          on_off() {
              case $1 in
              "[x]")
                  echo true
                  return 0
              esac
              echo false
              return 1
          }

          current_body=$(jq -r '.pull_request.body' ${GITHUB_EVENT_PATH})
          pr_number=$(jq -r '.pull_request.number' ${GITHUB_EVENT_PATH})

          new_body_lines=()

          state="description"

          while IFS= read -r line; do
              if [[ "${line}" == "#### Automation Settings"* ]]; then
                  # We're going to rebuild the automation settings
                  break
              fi
              new_body_lines+=("${line}")
          done <<< "${current_body}"

          new_body_lines+=("#### Automation Settings")
          new_body_lines+=("##### Automation branch: ${{ steps.automation.outputs.branch }}")
          new_body_lines+=("##### Features")

          for feature in features/*.feature; do
            new_body_lines+=("- [x] ${feature}")
          done

          new_body_lines+=("##### Hosts")

          for host in "${automation_hosts[@]}"; do
            new_body_lines+=("- [x] ${host}")
          done

          printf -v body "%s\n" "${new_body_lines[@]}"
          ./octokit.sh update_pull_request ${pr_number} body="${body}"
